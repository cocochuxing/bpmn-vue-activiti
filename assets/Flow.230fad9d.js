var e=Object.defineProperty,o=Object.prototype.hasOwnProperty,t=Object.getOwnPropertySymbols,n=Object.prototype.propertyIsEnumerable,r=(o,t,n)=>t in o?e(o,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):o[t]=n,l=(e,l)=>{for(var i in l||(l={}))o.call(l,i)&&r(e,i,l[i]);if(t)for(var i of t(l))n.call(l,i)&&r(e,i,l[i]);return e};import{g as i,E as a,D as s,C as d}from"./common.d25c9b87.js";import{c as p,G as u,b as c,e as b,B as m}from"./index.26fee642.js";import{P as v}from"./PrefixLabelSelect.d8fa9789.js";import"./vendor.f867c041.js";const f=[{label:"普通顺序流",value:"normal"},{label:"默认顺序流",value:"default"},{label:"条件顺序流",value:"condition"}],g=e=>{var o;return(null==e?void 0:e.conditionExpression)?"condition":(null==(o=null==e?void 0:e.sourceRef)?void 0:o.default)?"default":"normal"};var x={"bpmn:SequenceFlow":[l(l({},d),{properties:l(l({},d.properties),{"sequenceFlow.type":{component:v,prefixTitle:"顺序流类型",predicate:e=>{var o;return"bpmn:StartEvent"!==(null==(o=null==e?void 0:e.sourceRef)?void 0:o.$type)},vSlots:{default:()=>f.map((e=>p(u,e,null)))},getValue:e=>g(e),setValue(e,o,t){const n=m,r=n.getShape(),l=n.getModeler().get("elementRegistry").get(r.businessObject.sourceRef.id),i=n.getModeling();t&&"normal"!==t||(i.updateProperties(r,{conditionExpression:null}),delete r.businessObject.conditionExpression),"default"===t&&(i.updateProperties(l,{default:r}),delete r.businessObject.conditionExpression),"condition"===t&&i.updateProperties(r,{conditionExpression:n.getModeler().get("moddle").create("bpmn:FormalExpression")})}},"conditionExpression.body":{component:c,placeholder:"条件表达式",vSlots:{prepend:()=>p("div",null,[b("条件表达式")])},predicate:e=>"condition"===g(e),getValue(e){var o;return null==(o=null==e?void 0:e.conditionExpression)?void 0:o.body},setValue(e,o,t){const n=m,r=n.getModeler().get("moddle");n.getModeling().updateProperties(n.getShape(),{conditionExpression:r.create("bpmn:FormalExpression",{body:t})})}}})}),i({name:"条件监听器",eventOptions:[{label:"take",value:"take"}]}),a,s]};export default x;
